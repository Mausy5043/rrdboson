#! /usr/bin/python

import sys, commands, time
import os
os.nice(20)

def main():
  # Everybody! Remember where we parked! -Capt. Kirk
  orig_stdout = sys.stdout

  # Define output file
  f = file('/tmp/15-tempdisk.csv', 'a')
  #Redefine system output to our file
  sys.stdout = f

  # Get the time and date in human-readable form...
  outDate = commands.getoutput("date '+%F %H:%M:%S'")
  # ... and machine-readable form (UNIX-epoch)
  outUxDate =commands.getoutput("date +%s")


  # Harddisk temperatures
  outHdaTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x50026b723c0d6dd5 |grep '194 Temperature_Celsius' |awk '{print $10}'")
  outHdbTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x5000c50050a30da3 |grep '194 Temperature_Celsius' |awk '{print $10}'")
  outHdcTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x5000c50050a32d4f |grep '194 Temperature_Celsius' |awk '{print $10}'")
  # outHddTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x5000c50052c28f7d |grep '194 Temperature_Celsius' |awk '{print $10}'")
  outHddTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x50014ee6055a237b |grep '194 Temperature_Celsius' |awk '{print $10}'")
  #  outHdeTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x5000c50050f3630b |grep '194 Temperature_Celsius' |awk '{print $10}'")
  outHdeTemp = commands.getoutput("sudo smartctl -A /dev/disk/by-id/wwn-0x50014ee60507b79c |grep '194 Temperature_Celsius' |awk '{print $10}'")
  if outHdaTemp == "":
     outHdaTemp = "NaN"
  if outHdbTemp == "":
     outHdbTemp = "NaN"
  if outHdcTemp == "":
     outHdcTemp = "NaN"
  if outHddTemp == "":
     outHddTemp = "NaN"
  if outHdeTemp == "":
     outHdeTemp = "NaN"
  outHdfTemp = "NaN"
  outHdgTemp = "NaN"

  # Print the data
  print '{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}'.format(outDate, outUxDate, outHdaTemp, outHdbTemp, outHdcTemp, outHddTemp, outHdeTemp, outHdfTemp, outHdgTemp)

  # Close the file
  f.close()

  # Re-set the stdout
  sys.stdout = orig_stdout

if __name__ == "__main__":
    main()

